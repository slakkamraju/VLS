<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="23" passed="23">
  <reporter-output>
  </reporter-output>
  <suite name="RuleEngineSuite" duration-ms="241" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
    <groups>
      <group name="productAvailable">
        <method signature="RuleEngineTests.verifyProductionAvailabilityFalse()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityFalse" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyProductionAvailabilityTrue()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityTrue" class="RuleEngine.RuleEngineTests"/>
      </group> <!-- productAvailable -->
      <group name="regression">
        <method signature="RuleEngineTests.verifyProductionAvailabilityFalse()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityFalse" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyProductionAvailabilityTrue()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityTrue" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRate" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateForDifferentProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateForDifferentProductRate" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithExceedingMaxCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithExceedingMaxCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithLowCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithLowCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithMaximumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMaximumCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithMediumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMediumCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithNegetiveCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithNegetiveCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithoutSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithoutSpecialProductRate" class="RuleEngine.RuleEngineTests"/>
      </group> <!-- regression -->
      <group name="productRate">
        <method signature="RuleEngineTests.verifyWithSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRate" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateForDifferentProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateForDifferentProductRate" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithoutSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithoutSpecialProductRate" class="RuleEngine.RuleEngineTests"/>
      </group> <!-- productRate -->
      <group name="CreditScore">
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithExceedingMaxCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithExceedingMaxCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithLowCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithLowCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithMaximumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMaximumCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithMediumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMediumCreditScore" class="RuleEngine.RuleEngineTests"/>
        <method signature="RuleEngineTests.verifyWithSpecialProductRateWithNegetiveCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithNegetiveCreditScore" class="RuleEngine.RuleEngineTests"/>
      </group> <!-- CreditScore -->
    </groups>
    <test name="RuleEngineTests" duration-ms="241" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
      <class name="RuleEngine.RuleEngineTests">
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="18" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyProductionAvailabilityFalse()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityFalse" duration-ms="6" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductionAvailabilityFalse -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyProductionAvailabilityTrue()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyProductionAvailabilityTrue" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyProductionAvailabilityTrue -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRate" duration-ms="5" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRate -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateForDifferentProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateForDifferentProductRate" duration-ms="23" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateForDifferentProductRate -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateWithExceedingMaxCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithExceedingMaxCreditScore" duration-ms="2" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateWithExceedingMaxCreditScore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateWithLowCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithLowCreditScore" duration-ms="2" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateWithLowCreditScore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateWithMaximumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMaximumCreditScore" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateWithMaximumCreditScore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateWithMediumCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithMediumCreditScore" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateWithMediumCreditScore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithSpecialProductRateWithNegetiveCreditScore()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithSpecialProductRateWithNegetiveCreditScore" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithSpecialProductRateWithNegetiveCreditScore -->
        <test-method status="PASS" signature="setup()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="verifyWithoutSpecialProductRate()[pri:0, instance:RuleEngine.RuleEngineTests@15bb6bea]" name="verifyWithoutSpecialProductRate" duration-ms="2" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyWithoutSpecialProductRate -->
      </class> <!-- RuleEngine.RuleEngineTests -->
      <class name="Person.PersonTests">
        <test-method status="PASS" signature="checkLongState()[pri:0, instance:Person.PersonTests@8b96fde]" name="checkLongState" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLongState -->
        <test-method status="PASS" signature="checkScore()[pri:0, instance:Person.PersonTests@8b96fde]" name="checkScore" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkScore -->
        <test-method status="PASS" signature="checkSpecialCharacterInput()[pri:0, instance:Person.PersonTests@8b96fde]" name="checkSpecialCharacterInput" duration-ms="2" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSpecialCharacterInput -->
        <test-method status="PASS" signature="checkState()[pri:0, instance:Person.PersonTests@8b96fde]" name="checkState" duration-ms="6" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkState -->
        <test-method status="PASS" signature="setCreditScore()[pri:0, instance:Person.PersonTests@8b96fde]" name="setCreditScore" duration-ms="6" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setCreditScore -->
        <test-method status="PASS" signature="setState()[pri:0, instance:Person.PersonTests@8b96fde]" name="setState" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setState -->
      </class> <!-- Person.PersonTests -->
      <class name="Product.ProductTests">
        <test-method status="PASS" signature="checkLongProductName()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="checkLongProductName" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkLongProductName -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkProduct()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="checkProduct" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProduct -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkProductInterest()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="checkProductInterest" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProductInterest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkProductSpecialInterest()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="checkProductSpecialInterest" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkProductSpecialInterest -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="checkSpecialCharacterProductName()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="checkSpecialCharacterProductName" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkSpecialCharacterProductName -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setProductQualificationToFalse()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setProductQualificationToFalse" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setProductQualificationToFalse -->
        <test-method status="PASS" signature="setProductQualificationToTrue()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setProductQualificationToTrue" duration-ms="1" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setProductQualificationToTrue -->
        <test-method status="PASS" signature="setup()[pri:0, instance:Product.ProductTests@2d2e5f00]" name="setup" is-config="true" duration-ms="0" started-at="2019-12-08T20:46:31Z" finished-at="2019-12-08T20:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- Product.ProductTests -->
    </test> <!-- RuleEngineTests -->
  </suite> <!-- RuleEngineSuite -->
</testng-results>
